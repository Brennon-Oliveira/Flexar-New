//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.13.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from .//Flexar.g4 by ANTLR 4.13.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IFlexarListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.13.1")]
[System.Diagnostics.DebuggerNonUserCode]
[System.CLSCompliant(false)]
public partial class FlexarBaseListener : IFlexarListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram([NotNull] FlexarParser.ProgramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.program"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram([NotNull] FlexarParser.ProgramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.program_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterProgram_rule([NotNull] FlexarParser.Program_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.program_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitProgram_rule([NotNull] FlexarParser.Program_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.import_group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_group([NotNull] FlexarParser.Import_groupContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.import_group"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_group([NotNull] FlexarParser.Import_groupContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.import_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_rule([NotNull] FlexarParser.Import_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.import_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_rule([NotNull] FlexarParser.Import_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.import_namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterImport_namespace([NotNull] FlexarParser.Import_namespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.import_namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitImport_namespace([NotNull] FlexarParser.Import_namespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.namespace_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_name([NotNull] FlexarParser.Namespace_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.namespace_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_name([NotNull] FlexarParser.Namespace_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace([NotNull] FlexarParser.NamespaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.namespace"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace([NotNull] FlexarParser.NamespaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.namespace_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamespace_call([NotNull] FlexarParser.Namespace_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.namespace_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamespace_call([NotNull] FlexarParser.Namespace_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass([NotNull] FlexarParser.ClassContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass([NotNull] FlexarParser.ClassContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_extends([NotNull] FlexarParser.Class_extendsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_extends([NotNull] FlexarParser.Class_extendsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_implements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_implements([NotNull] FlexarParser.Class_implementsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_implements"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_implements([NotNull] FlexarParser.Class_implementsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body([NotNull] FlexarParser.Class_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body([NotNull] FlexarParser.Class_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_body_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_body_rule([NotNull] FlexarParser.Class_body_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_body_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_body_rule([NotNull] FlexarParser.Class_body_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_attribute([NotNull] FlexarParser.Class_attributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_attribute([NotNull] FlexarParser.Class_attributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.privacy_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrivacy_modifier([NotNull] FlexarParser.Privacy_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.privacy_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrivacy_modifier([NotNull] FlexarParser.Privacy_modifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_method([NotNull] FlexarParser.Class_methodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_method([NotNull] FlexarParser.Class_methodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.abstract_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAbstract_method([NotNull] FlexarParser.Abstract_methodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.abstract_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAbstract_method([NotNull] FlexarParser.Abstract_methodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_modifier([NotNull] FlexarParser.Class_modifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_modifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_modifier([NotNull] FlexarParser.Class_modifierContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructor([NotNull] FlexarParser.ConstructorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.constructor"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructor([NotNull] FlexarParser.ConstructorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.class_new_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterClass_new_instance([NotNull] FlexarParser.Class_new_instanceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.class_new_instance"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitClass_new_instance([NotNull] FlexarParser.Class_new_instanceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.method_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMethod_call([NotNull] FlexarParser.Method_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.method_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMethod_call([NotNull] FlexarParser.Method_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.attribute_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAttribute_call([NotNull] FlexarParser.Attribute_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.attribute_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAttribute_call([NotNull] FlexarParser.Attribute_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface([NotNull] FlexarParser.InterfaceContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface([NotNull] FlexarParser.InterfaceContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface_extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_extends([NotNull] FlexarParser.Interface_extendsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface_extends"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_extends([NotNull] FlexarParser.Interface_extendsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_body([NotNull] FlexarParser.Interface_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_body([NotNull] FlexarParser.Interface_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface_body_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_body_rule([NotNull] FlexarParser.Interface_body_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface_body_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_body_rule([NotNull] FlexarParser.Interface_body_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_method([NotNull] FlexarParser.Interface_methodContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface_method"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_method([NotNull] FlexarParser.Interface_methodContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.interface_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterInterface_attribute([NotNull] FlexarParser.Interface_attributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.interface_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitInterface_attribute([NotNull] FlexarParser.Interface_attributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.struct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct([NotNull] FlexarParser.StructContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.struct"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct([NotNull] FlexarParser.StructContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_body([NotNull] FlexarParser.Struct_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.struct_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_body([NotNull] FlexarParser.Struct_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.struct_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_attribute([NotNull] FlexarParser.Struct_attributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.struct_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_attribute([NotNull] FlexarParser.Struct_attributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.enum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum([NotNull] FlexarParser.EnumContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.enum"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum([NotNull] FlexarParser.EnumContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_body([NotNull] FlexarParser.Enum_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.enum_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_body([NotNull] FlexarParser.Enum_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.enum_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterEnum_attribute([NotNull] FlexarParser.Enum_attributeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.enum_attribute"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitEnum_attribute([NotNull] FlexarParser.Enum_attributeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] FlexarParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] FlexarParser.ExpressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.composed_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComposed_value([NotNull] FlexarParser.Composed_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.composed_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComposed_value([NotNull] FlexarParser.Composed_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.list_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterList_value([NotNull] FlexarParser.List_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.list_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitList_value([NotNull] FlexarParser.List_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.map_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMap_value([NotNull] FlexarParser.Map_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.map_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMap_value([NotNull] FlexarParser.Map_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.tuple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTuple_value([NotNull] FlexarParser.Tuple_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.tuple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTuple_value([NotNull] FlexarParser.Tuple_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.named_tuple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamed_tuple_value([NotNull] FlexarParser.Named_tuple_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.named_tuple_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamed_tuple_value([NotNull] FlexarParser.Named_tuple_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnd_expression([NotNull] FlexarParser.And_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.and_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnd_expression([NotNull] FlexarParser.And_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOr_expression([NotNull] FlexarParser.Or_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.or_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOr_expression([NotNull] FlexarParser.Or_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.xor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterXor_expression([NotNull] FlexarParser.Xor_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.xor_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitXor_expression([NotNull] FlexarParser.Xor_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.not_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNot_expression([NotNull] FlexarParser.Not_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.not_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNot_expression([NotNull] FlexarParser.Not_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.expression_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression_math([NotNull] FlexarParser.Expression_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.expression_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression_math([NotNull] FlexarParser.Expression_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.term_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm_math([NotNull] FlexarParser.Term_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.term_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm_math([NotNull] FlexarParser.Term_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.factor_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor_math([NotNull] FlexarParser.Factor_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.factor_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor_math([NotNull] FlexarParser.Factor_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.bitwise_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwise_math([NotNull] FlexarParser.Bitwise_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.bitwise_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwise_math([NotNull] FlexarParser.Bitwise_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.shift_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_math([NotNull] FlexarParser.Shift_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.shift_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_math([NotNull] FlexarParser.Shift_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.unary_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnary_math([NotNull] FlexarParser.Unary_mathContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.unary_math"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnary_math([NotNull] FlexarParser.Unary_mathContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.before_unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBefore_unary([NotNull] FlexarParser.Before_unaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.before_unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBefore_unary([NotNull] FlexarParser.Before_unaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.after_unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAfter_unary([NotNull] FlexarParser.After_unaryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.after_unary"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAfter_unary([NotNull] FlexarParser.After_unaryContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.math_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMath_value([NotNull] FlexarParser.Math_valueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.math_value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMath_value([NotNull] FlexarParser.Math_valueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterParenthesis_expression([NotNull] FlexarParser.Parenthesis_expressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.parenthesis_expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitParenthesis_expression([NotNull] FlexarParser.Parenthesis_expressionContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.bitwise_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBitwise_operator([NotNull] FlexarParser.Bitwise_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.bitwise_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBitwise_operator([NotNull] FlexarParser.Bitwise_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.shift_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterShift_operator([NotNull] FlexarParser.Shift_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.shift_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitShift_operator([NotNull] FlexarParser.Shift_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.term_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTerm_operator([NotNull] FlexarParser.Term_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.term_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTerm_operator([NotNull] FlexarParser.Term_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.factor_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFactor_operator([NotNull] FlexarParser.Factor_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.factor_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFactor_operator([NotNull] FlexarParser.Factor_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.comparision_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterComparision_operator([NotNull] FlexarParser.Comparision_operatorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.comparision_operator"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitComparision_operator([NotNull] FlexarParser.Comparision_operatorContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValue([NotNull] FlexarParser.ValueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.value"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValue([NotNull] FlexarParser.ValueContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStatement([NotNull] FlexarParser.StatementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStatement([NotNull] FlexarParser.StatementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.new_scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNew_scope([NotNull] FlexarParser.New_scopeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.new_scope"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNew_scope([NotNull] FlexarParser.New_scopeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_statement([NotNull] FlexarParser.For_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.for_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_statement([NotNull] FlexarParser.For_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.for_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_rule([NotNull] FlexarParser.For_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.for_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_rule([NotNull] FlexarParser.For_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.for_in"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFor_in([NotNull] FlexarParser.For_inContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.for_in"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFor_in([NotNull] FlexarParser.For_inContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.full_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFull_for([NotNull] FlexarParser.Full_forContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.full_for"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFull_for([NotNull] FlexarParser.Full_forContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhile_statement([NotNull] FlexarParser.While_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhile_statement([NotNull] FlexarParser.While_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.do_while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDo_while_statement([NotNull] FlexarParser.Do_while_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.do_while_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDo_while_statement([NotNull] FlexarParser.Do_while_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_statement([NotNull] FlexarParser.Switch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.switch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_statement([NotNull] FlexarParser.Switch_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSwitch_case([NotNull] FlexarParser.Switch_caseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.switch_case"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSwitch_case([NotNull] FlexarParser.Switch_caseContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTry_statement([NotNull] FlexarParser.Try_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.try_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTry_statement([NotNull] FlexarParser.Try_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCatch_statement([NotNull] FlexarParser.Catch_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.catch_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCatch_statement([NotNull] FlexarParser.Catch_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.finally_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinally_statement([NotNull] FlexarParser.Finally_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.finally_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinally_statement([NotNull] FlexarParser.Finally_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIf_statement([NotNull] FlexarParser.If_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.if_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIf_statement([NotNull] FlexarParser.If_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.elif_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElif_statement([NotNull] FlexarParser.Elif_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.elif_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElif_statement([NotNull] FlexarParser.Elif_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.else_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterElse_statement([NotNull] FlexarParser.Else_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.else_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitElse_statement([NotNull] FlexarParser.Else_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.struct_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterStruct_func([NotNull] FlexarParser.Struct_funcContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.struct_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitStruct_func([NotNull] FlexarParser.Struct_funcContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc([NotNull] FlexarParser.FuncContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc([NotNull] FlexarParser.FuncContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.anonymous_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAnonymous_func([NotNull] FlexarParser.Anonymous_funcContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.anonymous_func"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAnonymous_func([NotNull] FlexarParser.Anonymous_funcContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_param([NotNull] FlexarParser.Func_paramContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_param"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_param([NotNull] FlexarParser.Func_paramContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_callback"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_callback([NotNull] FlexarParser.Func_callbackContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_callback"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_callback([NotNull] FlexarParser.Func_callbackContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_param_callback"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_param_callback([NotNull] FlexarParser.Func_param_callbackContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_param_callback"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_param_callback([NotNull] FlexarParser.Func_param_callbackContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_param_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_param_rule([NotNull] FlexarParser.Func_param_ruleContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_param_rule"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_param_rule([NotNull] FlexarParser.Func_param_ruleContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_call([NotNull] FlexarParser.Func_callContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_call"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_call([NotNull] FlexarParser.Func_callContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_call_params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_call_params([NotNull] FlexarParser.Func_call_paramsContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_call_params"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_call_params([NotNull] FlexarParser.Func_call_paramsContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_return([NotNull] FlexarParser.Func_returnContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_return"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_return([NotNull] FlexarParser.Func_returnContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.func_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunc_body([NotNull] FlexarParser.Func_bodyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.func_body"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunc_body([NotNull] FlexarParser.Func_bodyContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterReturn_statement([NotNull] FlexarParser.Return_statementContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.return_statement"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitReturn_statement([NotNull] FlexarParser.Return_statementContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_declaration([NotNull] FlexarParser.Variable_declarationContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.variable_declaration"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_declaration([NotNull] FlexarParser.Variable_declarationContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.variable_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_assign([NotNull] FlexarParser.Variable_assignContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.variable_assign"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_assign([NotNull] FlexarParser.Variable_assignContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVariable_name([NotNull] FlexarParser.Variable_nameContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.variable_name"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVariable_name([NotNull] FlexarParser.Variable_nameContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.assing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAssing([NotNull] FlexarParser.AssingContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.assing"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAssing([NotNull] FlexarParser.AssingContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterType([NotNull] FlexarParser.TypeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitType([NotNull] FlexarParser.TypeContext context) { }
	/// <summary>
	/// Enter a parse tree produced by <see cref="FlexarParser.final_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFinal_type([NotNull] FlexarParser.Final_typeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="FlexarParser.final_type"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFinal_type([NotNull] FlexarParser.Final_typeContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
